@page "/municipalities"

@using LocalEyes.Shared.Models
@inject LocalEyes.Services.MunicipalityService MunicipalityService
@inject NavigationManager Navigation

@rendermode InteractiveServer

<PageTitle>Municipalities</PageTitle>

<h1>Municipalities</h1>
<br />
<br />

<row>
    <div class="col-md-12" style="text-align: end">
        <button class="btn btn-primary" @onclick="() => CreateMunicipality()">New Municipality</button>
    </div>
</row>

@if (municipalities == null)
{
    <p>Loading...</p>
}
else if (municipalities.Count == 0)
{
    <p>No municipalities available.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Zipcode</th>
                <th class="actions-column"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var municipality in municipalities)
            {
                <tr>
                    <td><strong>@municipality.Name</strong></td>
                    <td><strong>@municipality.Zipcode</strong></td>
                    <td class="actions-column">
                        <button class="btn btn-primary table-action-btn ms-1" @onclick="() => EditMunicipality(municipality.Id)">
                            <i class="fas fa-pencil" aria-hidden="true"></i>
                        </button>
                        <button class="btn btn-danger table-action-btn ms-1" @onclick="() => DeleteMunicipality(municipality.Id)">
                            <i class="fas fa-trash" aria-hidden="true"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (showDeleteConfirmation)
{
    <div class="modal-overlay">
        <div class="modal-box">
            <h3>Confirm Deletion</h3>
            <p>Are you sure you want to delete this municipality?</p>
            <div class="modal-actions">
                <button class="btn btn-danger" @onclick="ConfirmDelete">Confirm</button>
                <button class="btn btn-primary" @onclick="CancelDelete">Cancel</button>
            </div>
        </div>
    </div>
}

@code {
    private List<Municipality> municipalities;
    private bool showDeleteConfirmation = false;
    private Guid municipalityToDelete;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            municipalities = await MunicipalityService.GetMunicipalitiesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching municipalities: {ex.Message}");
        }
    }

    private void CreateMunicipality()
    {
        Navigation.NavigateTo("/editmunicipality");
    }

    private void EditMunicipality(Guid municipalityId)
    {
        Navigation.NavigateTo($"/editmunicipality/{municipalityId}");
    }

    private void DeleteMunicipality(Guid municipalityId)
    {
        municipalityToDelete = municipalityId;
        showDeleteConfirmation = true;
    }

    private async Task ConfirmDelete()
    {
        try
        {
            await MunicipalityService.DeleteMunicipality(municipalityToDelete);
            municipalities = municipalities.Where(m => m.Id != municipalityToDelete).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting municipality: {ex.Message}");
        }
        finally
        {
            showDeleteConfirmation = false;
        }
    }

    private void CancelDelete()
    {
        showDeleteConfirmation = false;
    }
}
