@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>

    <Authorized>

        <div class="top-row ps-3 navbar navbar-dark">

            <div class="container-fluid">

                <img src="media/LocalEyesLogo-transparent-white.png" alt="Logo" class="navbar-logo" />

                <a class="navbar-brand" href="">LocalEyes</a>

            </div>
        </div>

        <input type="checkbox" title="Navigation menu" class="navbar-toggler" />

        <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">

            <nav class="flex-column">

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <i class="fas fa-home" aria-hidden="true"></i> Start
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="reports">
                        <i class="fas fa-file-alt" aria-hidden="true"></i> Reports
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="municipalities">
                        <i class="fas fa-tree-city" aria-hidden="true"></i> Municipalities
                    </NavLink>
                </div>

                @if (IsAdmin)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="users">
                            <i class="fas fa-users" aria-hidden="true"></i> Users
                        </NavLink>
                    </div>
                }

            </nav>
        </div>

        @code 
        {
            private bool IsAdmin = false;

            protected override async Task OnInitializedAsync()
            {
                var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

                var user = authState.User;

                IsAdmin = user.Identity?.IsAuthenticated == true && user.IsInRole("Administrator");
            } 
        }

    </Authorized>

    <NotAuthorized>

    </NotAuthorized>

</AuthorizeView>

